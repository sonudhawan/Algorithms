#include <iostream>
#define N 6
#define jump cout<<endl
using namespace std;

void print (int arr[N][N]){
for(int i = 0 ; i <N ; i++){ jump;
for(int j = 0 ; j <N ; j++){
cout << arr[i][j] << " " ;
}}}

bool safe(int board[N][N],int row , int col){
    int i, j;
    for (i = 0; i < col; i++)
        if (board[row][i])
            return false;
    for (i=row, j=col; i>=0 && j>=0; i--, j--) //up to down
        if (board[i][j])
            return false;
    for (i=row, j=col; j>=0 && i<N; i++, j--) // down to up
        if (board[i][j])
            return false;
 return true ;
}

bool nqueen(int board[N][N],int col){
 if(col >= N){
return true;
 }
 for(int i = 0 ; i < N ; i++){
    if(safe(board,i,col)){
         board[i][col] = 1;
        if(nqueen(board,col+1)) {return true;}
        else { board[i][col] = 0;}
    }
 }
    return false;
 }



int main(){
int board[N][N];

for(int i = 0 ; i< N; i++ ){
for(int j = 0 ; j< N; j++){
board[i][j] = 0;}}
if(nqueen(board,0) == false){
        cout << " sorry ";
        return false;
}
else{
        cout << " solution : " ;
        print(board);
}
return 0;
}
